{"ast":null,"code":"var _jsxFileName = \"/Users/samsadrazodi/Desktop/Bootcamp/41_React_Router/41.2_React-Router_Patterns/exercise/color-factory/src/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport ColorForm from \"./ColorForm\";\nimport colorNameList from \"color-name-list\";\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const {\n    color,\n    code\n  } = useParams();\n  const [colors, setColors] = useState([]);\n  const [codes, setCodes] = useState([]);\n  // Assuming you want to add a new color based on the params\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"HomePage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the color factory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/ColorForm\",\n        children: \"Add a Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Colors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: color.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"fk5wU60x6e+Z54FCdM14Mnm3yeM=\", false, function () {\n  return [useParams];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","NavLink","useParams","ColorForm","colorNameList","v4","uuid","jsxDEV","_jsxDEV","HomePage","_s","color","code","colors","setColors","codes","setCodes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","map","index","name","_c","$RefreshReg$"],"sources":["/Users/samsadrazodi/Desktop/Bootcamp/41_React_Router/41.2_React-Router_Patterns/exercise/color-factory/src/HomePage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport ColorForm from \"./ColorForm\";\nimport colorNameList from \"color-name-list\";\nimport { v4 as uuid } from 'uuid';\n\nconst HomePage = () => {\n\n\n    const { color, code } = useParams();\n    const [colors, setColors] = useState([]);\n    const [codes, setCodes] = useState([])\n  // Assuming you want to add a new color based on the params\n\n\n  return (\n    <div className=\"HomePage\">\n      <h1>Welcome to the color factory</h1>\n\n      <button>\n        <NavLink to=\"/ColorForm\">Add a Color</NavLink>\n      </button>\n\n      {/* Display the list of colors */}\n      <div>\n        <h2>Colors:</h2>\n        <ul>\n          {colors.map((color, index) => (\n            <li key={index}>{color.name}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,EAAEC,SAAS,QAAQ,kBAAkB;AACrD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGnB,MAAM;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGV,SAAS,CAAC,CAAC;EACnC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxC;;EAGA,oBACEQ,OAAA;IAAKS,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBV,OAAA;MAAAU,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErCd,OAAA;MAAAU,QAAA,eACEV,OAAA,CAACP,OAAO;QAACsB,EAAE,EAAC,YAAY;QAAAL,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eAGTd,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBd,OAAA;QAAAU,QAAA,EACGL,MAAM,CAACW,GAAG,CAAC,CAACb,KAAK,EAAEc,KAAK,kBACvBjB,OAAA;UAAAU,QAAA,EAAiBP,KAAK,CAACe;QAAI,GAAlBD,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkB,CACjC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CA5BID,QAAQ;EAAA,QAGcP,SAAS;AAAA;AAAAyB,EAAA,GAH/BlB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}